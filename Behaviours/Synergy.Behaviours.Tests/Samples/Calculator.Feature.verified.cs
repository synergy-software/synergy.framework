// <auto-generated />
using System.CodeDom.Compiler;

namespace Synergy.Behaviours.Tests.Samples;

[Xunit.Trait("Category", "tag")] // @tag
[GeneratedCode("Synergy.Behaviours.Testing", "1.0.0.0")]
partial class CalculatorFeature // Feature: Calculator
{
    private void CalculatorBackground() // Background:
    {
       Given().UserOpenedCalculator();  // Given User opened calculator
    }

    // Rule: Adding numbers

    [Xunit.Trait("Category", "Add")] // @Add
    [Xunit.Trait("Category", "Verify")] // @Verify
    [Xunit.Fact(DisplayName = "Scenario: Add two numbers")]
    public void AddTwoNumbers() // Scenario: Add two numbers
    {
       CurrentScenario(
           "    Scenario: Add two numbers",
           "      Given the first number is 50",
           "      And the second number is 70",
           "      When the two numbers are added",
           "      Then the result should be 120"
       );

       Background().CalculatorBackground();

       Given().TheFirstNumberIs50();     // Given the first number is 50
         And().TheSecondNumberIs70();    // And the second number is 70
        When().TheTwoNumbersAreAdded();  // When the two numbers are added
        Then().TheResultShouldBe120();   // Then the result should be 120

        Moreover().AfterAddTwoNumbers();
    }

    [Xunit.Trait("Category", "Add")] // @Add
    [Xunit.Fact(DisplayName = "Example: Add two numbers in \"different\" way")]
    public void AddTwoNumbersInDifferentWay() // Example: Add two numbers in "different" way
    {
       CurrentScenario(
           "    Example: Add two numbers in \"different\" way",
           "      Given Two numbers:",
           "      * the first number is 50",
           "      * the second number is 70",
           "      When the two numbers are added",
           "      Then the result should be 120"
       );

       Background().CalculatorBackground();

       Given().TwoNumbers();             // Given Two numbers:
         And().TheFirstNumberIs50();     // * the first number is 50
         And().TheSecondNumberIs70();    // * the second number is 70
        When().TheTwoNumbersAreAdded();  // When the two numbers are added
        Then().TheResultShouldBe120();   // Then the result should be 120
    }

    [Xunit.Trait("Category", "Add")] // @Add
    [Xunit.Theory(DisplayName = "Scenario Outline: Add many numbers")]
    [Xunit.InlineData("0", "70", "70")]
    [Xunit.InlineData("50", "70", "120")]
    public void AddManyNumbers(string firstNo, string second, string result) // Scenario Outline: Add many numbers
    {
       CurrentScenario(
           "    Scenario Outline: Add many numbers",
           "      Given the first number is <first no>",
           "      And the second number is <second>",
           "      When the two numbers are added",
           "      Then the result should be <result>"
       );

       Background().CalculatorBackground();

       Given().TheFirstNumberIs(firstNo);  // Given the first number is <first no>
         And().TheSecondNumberIs(second);  // And the second number is <second>
        When().TheTwoNumbersAreAdded();    // When the two numbers are added
        Then().TheResultShouldBe(result);  // Then the result should be <result>
    }

    partial void CurrentScenario(params string[] scenario);
}
